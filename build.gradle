plugins {
    id("java-library")
    alias(libs.plugins.kotlin.jvm)
    alias(libs.plugins.kotlinx.serialization)
    alias(libs.plugins.android.lint) // dependency of commons-android
}

def envCI = System.getenv("CI")
def isCI = envCI != null && envCI != ""

java {
    sourceCompatibility = rootProject.javaVersion
    targetCompatibility = rootProject.javaVersion
    toolchain.languageVersion = JavaLanguageVersion.of(rootProject.javaToolchainVersion.toString())
}
compileKotlin {
    kotlinOptions {
        jvmTarget = rootProject.javaVersion
        // allWarningsAsErrors = true // replaced by "DeprecatedCall" in lint
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = rootProject.javaVersion
        // allWarningsAsErrors = true // replaced by "DeprecatedCall" in lint
    }
}

dependencies {
    implementation(platform(libs.kotlin.bom))
    implementation(platform(libs.kotlinx.coroutines.bom))
    implementation(platform(libs.kotlinx.serialization.bom))
    implementation(libs.bundles.kotlin)

    testImplementation(libs.bundles.test.unit)
}

test {
    useJUnit()
    testLogging {
        if (isCI) {
            events("started", "passed", "skipped", "failed", "standard_out", "standard_error")
        } else {
            events("failed")
        }
    }
}